{"response": {"status": "ok", "userTier": "developer", "total": 1, "content": {"id": "technology/blog/2008/feb/16/amazonwebservicesgoesdown", "type": "article", "sectionId": "technology", "sectionName": "Technology", "webPublicationDate": "2008-02-16T17:27:25Z", "webTitle": "Amazon Web Services goes down, takes out some Web 2.0 sites", "webUrl": "https://www.theguardian.com/technology/blog/2008/feb/16/amazonwebservicesgoesdown", "apiUrl": "https://content.guardianapis.com/technology/blog/2008/feb/16/amazonwebservicesgoesdown", "fields": {"headline": "Amazon Web Services goes down, takes out some Web 2.0 sites", "bodyText": "Amazon Web Services stopped working yesterday morning, which affected a number of Web 2.0 sites. TechCrunch was quick to point out that this blew a big hole in the \"cloud computing\" hype that seems to be prevalent in Silicon Valley at the moment. It said: This could just be growing pains for Amazon Web Services, as more startups and other companies come to rely on it for their Web-scale computing infrastructure. But even if the outage only lasted a couple hours, it is unacceptable. Nobody is going to trust their business to cloud computing unless it is more reliable than the data-center computing that is the current norm. So many Websites now rely on Amazon's S3 storage service and, increasingly, on its EC2 compute cloud as well, that an outage takes down a lot of sites, or at least takes down some of their functionality. Cloud computing needs to be 99.999 percent reliable if Amazon and others want it to become more widely adopted. Amazon Web Services is nothing like that reliable: it seems it only aspires to 99.9% availability, which would have been unacceptable in an antique mainframe, let alone a specialised fault-tolerant server. If people really want \"five nines\" availability, they'll have to pay for it, and at the moment it doesn't come at anything like Amazon's prices. One of the people promoting cloud computing is Greg Olsen, founder and chief technology officer of Coghead. Rather amusingly, the day before Amazon fell over, GigaOM published his guest column about adopting this stuff. He wrote: By leveraging service options like Amazon's EC2 and S3, a small company can deploy a complex, highly available and scalable multi-user software application -- without huge upfront investments in hardware or software infrastructure. Likewise, a very small company can build a simple, narrowly focused service and can cost-effectively sell it to a mass audience. Neither of these companies would have been possible only a short time ago. Although I have a natural resistance to boosterism, I think Olsen is right and TechCrunch is wrong. Cloud computing does not need to be 99.999% reliable to get adopted by Web 2.0 companies. It makes sense to adopt it because it's cheap and because you don't need much technical competence to do it. It therefore meets Web 2.0 needs very nicely. Of course, you'd have to be incompetent way beyond stupidity to build your banking, air traffic control, hospital or mission-critical corporate system on Amazon Web Services, because these do need to be reliable. Web 2.0 systems don't. Who really cares if Twitter goes down for a couple of hours, or even a couple of days, apart from the people who run Twitter? There are, however, a couple of useful lessons from the debacle. The first is that \"cloud computing\" is still mostly hype. It will stop being mostly hype when service providers start to offer guaranteed service level agreements (SLAs) backed up by real financial guarantees. The second is that relying on somebody else's unreliable system makes your system less reliable, not more reliable. You don't have \"five nines\" reliability in whatever it is you do if you're using a supplier that only has \"three nines\" reliability. And if you're relying on a beta Web 2.0 site that's relying on another beta service like Amazon Web Services, then you're just asking for trouble. Web-based services are great, especially if they're free or very cheap, but it's insane to pretend they have the reliability of the electricity grid (which isn't wholly reliable) or a water utility (ditto, plus leaks). Web sites today don't guarantee reliability, availability or adequate performance, and there are lots of ways you can lose not just the service but also your data (as I wrote in a column this week). I'm not saying you shouldn't use them. I am saying that you should know what you're doing. Yesterday just showed that some people don't."}, "isHosted": false, "pillarId": "pillar/news", "pillarName": "News"}}}